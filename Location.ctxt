#BlueJ class context
comment0.params=r\ c
comment0.target=Location(int,\ int)
comment0.text=\r\n\ Constructs\ a\ location\ with\ given\ row\ and\ column\ coordinates.\r\n\ @param\ r\ the\ row\r\n\ @param\ c\ the\ column\r\n
comment1.params=
comment1.target=int\ getRow()
comment1.text=\r\n\ Gets\ the\ row\ coordinate.\r\n\ @return\ the\ row\ of\ this\ location\r\n
comment2.params=
comment2.target=int\ getCol()
comment2.text=\r\n\ Gets\ the\ column\ coordinate.\r\n\ @return\ the\ column\ of\ this\ location\r\n
comment3.params=direction
comment3.target=Location\ getAdjacentLocation(int)
comment3.text=\r\n\ Gets\ the\ adjacent\ location\ in\ any\ one\ of\ the\ eight\ compass\ directions.\r\n\ @param\ direction\ the\ direction\ in\ which\ to\ find\ a\ neighbor\ location\r\n\ @return\ the\ adjacent\ location\ in\ the\ direction\ that\ is\ closest\ to\r\n\ <tt>direction</tt>\r\n
comment4.params=target
comment4.target=int\ getDirectionToward(Location)
comment4.text=\r\n\ Returns\ the\ direction\ from\ this\ location\ toward\ another\ location.\ The\r\n\ direction\ is\ rounded\ to\ the\ nearest\ compass\ direction.\r\n\ @param\ target\ a\ location\ that\ is\ different\ from\ this\ location\r\n\ @return\ the\ closest\ compass\ direction\ from\ this\ location\ toward\r\n\ <code>target</code>\r\n
comment5.params=other
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\r\n\ Indicates\ whether\ some\ other\ <code>Location</code>\ object\ is\ "equal\ to"\r\n\ this\ one.\r\n\ @param\ other\ the\ other\ location\ to\ test\r\n\ @return\ <code>true</code>\ if\ <code>other</code>\ is\ a\r\n\ <code>Location</code>\ with\ the\ same\ row\ and\ column\ as\ this\ location;\r\n\ <code>false</code>\ otherwise\r\n
comment6.params=
comment6.target=int\ hashCode()
comment6.text=\r\n\ Generates\ a\ hash\ code.\r\n\ @return\ a\ hash\ code\ for\ this\ location\r\n
comment7.params=other
comment7.target=int\ compareTo(java.lang.Object)
comment7.text=\r\n\ Compares\ this\ location\ to\ <code>other</code>\ for\ ordering.\ Returns\ a\r\n\ negative\ integer,\ zero,\ or\ a\ positive\ integer\ as\ this\ location\ is\ less\r\n\ than,\ equal\ to,\ or\ greater\ than\ <code>other</code>.\ Locations\ are\r\n\ ordered\ in\ row-major\ order.\ <br\ />\r\n\ (Precondition\:\ <code>other</code>\ is\ a\ <code>Location</code>\ object.)\r\n\ @param\ other\ the\ other\ location\ to\ test\r\n\ @return\ a\ negative\ integer\ if\ this\ location\ is\ less\ than\r\n\ <code>other</code>,\ zero\ if\ the\ two\ locations\ are\ equal,\ or\ a\ positive\r\n\ integer\ if\ this\ location\ is\ greater\ than\ <code>other</code>\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Creates\ a\ string\ that\ describes\ this\ location.\r\n\ @return\ a\ string\ with\ the\ row\ and\ column\ of\ this\ location,\ in\ the\ format\r\n\ (row,\ col)\r\n
numComments=9
